{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","list","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","cat","i","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAgBrC,OAEI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACTN,EAAWO,OAAOC,OAAS,IAC1BV,GAAc,SAACW,GAAD,OAAST,GAAT,mBAAuBS,OACrCR,EAAc,OAOd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,OACvBN,QAAQC,IAAIH,EAAEU,OAAOF,Y,uBCWdG,EAdF,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACJC,EADI,UAFI,uCAEJ,oBAHC,mCAGD,cACsCC,UAAUH,GADhD,qBAEcI,MAAMF,GAFpB,cAEJG,EAFI,gBAGWA,EAAUC,OAHrB,uBAGHC,EAHG,EAGHA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARhC,kBAWHM,GAXG,4CAAD,sDCMEO,EARK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC3B,OAAQ,yBAAKc,UAAU,0DACf,yBAAKC,IAAKL,EAAOM,IAAKhB,IACtB,4BAAKU,KCDJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXhB,mBAAS,CAC3BuB,KAAK,GACLa,SAAQ,IAHqB,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAEIqB,EDZuBK,CAAa1B,GAApCoB,EAF4B,EAE5BA,QAAaP,EAFe,EAEpBN,KACf,OACI,yBAAKS,UAAU,aACX,wBAAIA,UAAU,uDAAuDhB,GAE7DoB,EAAU,yBAAKJ,UAAU,QAAf,eAA2CH,EAAOJ,KAAI,SAAAC,GAAG,OAAG,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,SEgBzGkB,EArBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,YAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAKxB,OACH,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAED8C,EAAWpB,KAAI,SAACqB,EAAIC,GAAL,OAAW,kBAAC,EAAD,CAASJ,IAAKG,EAAI,IAAIC,EAAG/B,SAAU8B,U,MCdhEE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.b4c7f0fe.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n//const handleAdd = (el) =>{(setCategorias((list)=>[...list,'ppp']))}\r\nconst AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('submit_hecho');\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias((list)=>[inputValue,...list]);\r\n            setinputValue('');  \r\n        }\r\n    }\r\n\r\n    return (\r\n                \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nconst apiKey = 'nlhjtAyp2ERDcLglAwTHoUMHNdyL5G9O';\r\nconst urlRandom = 'https://api.giphy.com/v1/gifs/search';\r\n\r\nconst getGifs=async(category) => {\r\n    const url = `${urlRandom}?api_key=${apiKey}&q=${encodeURI(category)}&limit=5`;\r\n    const respuesta = await fetch(url);   \r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (<div className=\"card animate__animated animate__bounce animate__faster\">\r\n            <img alt={title} src={url} />\r\n            <h3>{title}</h3>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {loading,data:images} = useFetchGifs(category);\r\n    return (\r\n        <div className=\"card-grid\">\r\n            <h1 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h1>\r\n                {\r\n                    loading ? <div className=\"load\">Loading !!!</div> :  images.map(img=> <GifGridItem key={img.id} {...img} />)\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import {  useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n            data:[],\r\n            loading:true\r\n    })\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n        })\r\n    },[category])\r\n\r\n    return state; // {data:[] , loading:true}\r\n}","import React,{useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['abascal']);\r\n    //const handleAdd = (el) =>{(setCategorias((list)=>[...list,'ppp']))}\r\n    //const categorias = ['abascal','espa√±a','vox'];\r\n   return ( \r\n<>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategory setCategorias={setCategorias} />\r\n    <hr />\r\n    \r\n    <ul>\r\n   {\r\n   categorias.map((cat,i) => <GifGrid key={cat+'_'+i} category={cat}/> )\r\n   }\r\n    </ul>\r\n\r\n</>\r\n   )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'; \n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}